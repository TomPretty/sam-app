AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 15
    Environment:
      Variables:
        USERS_TABLE: !Ref UsersTable
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type'"
      AllowMethods: "'*'"
      MaxAge: "'600'"

Parameters:
  Repository:
    Type: String
    Description: GitHub Repository URL
  Branch:
    Type: String
    Description: GitHub Branch
    Default: main
  OauthToken:
    Type: String
    Description: GitHub Repository URL
    NoEcho: true

Resources:
  UpdateLocationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/update_location/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        Update:
          Type: Api
          Properties:
            Path: /current-location
            Method: put

  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/get_users/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
      Events:
        Get:
          Type: Api
          Properties:
            Path: /users
            Method: get

  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  AmplifyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - amplify.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: Amplify
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "amplify:*"
                Resource: "*"

  AmplifyApp:
    Type: "AWS::Amplify::App"
    Properties:
      Name: PokemonFauxApp
      Repository: !Ref Repository
      Description: Pokemon Faux App
      OauthToken: !Ref OauthToken
      BuildSpec: |-
        version: 0.1
        frontend:
          phases:
            build:
              commands:
                - cd www
                - yarn install
                - yarn build --production
          artifacts:
            baseDirectory: www/build/
            files:
              - '**/*'
      IAMServiceRole: !GetAtt AmplifyRole.Arn

  AmplifyBranch:
    Type: AWS::Amplify::Branch
    Properties:
      BranchName: !Ref Branch
      AppId: !GetAtt AmplifyApp.AppId
      Description: Amplify Console Branch
      EnableAutoBuild: true

Outputs:
  BaseApi:
    Description: "API Gateway base endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"